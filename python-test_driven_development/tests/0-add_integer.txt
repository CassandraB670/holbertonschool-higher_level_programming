The 0-add_integer Module
=======================

Module to import to use ''add_integer```
This module defines an int addition function by returning the addition of its two arguments (a + b)

    >>> add_integer = __import__("0-add_integer").add_integer

Usage:
- Int

    >>> print(add_integer(4, 5))
    9

    >>> print(add_integer(4, 0))
    4

    >>> print(add_integer(0, 4))
    4

    >>> print(add_integer(-5, 4))
    -1

    >>> print(add_integer(4, -5))
    -1

    >>> print(add_integer(0, -5))
    -5

    >>> print(add_integer(-5, 0))
    -5

    >>> print(add_integer(-5, -4))
    -9

    >>> print(add_integer(0))
    98

    >>> print(add_integer(5))
    103

    >>> print(add_integer(-5))
    93

    >>> print(add_integer(a = 3, b = 5))
    8

    >>> print(add_integer(1+2, b = 5))
    8

- float
    >>> print(add_integer(5.2, 5))
    10

    >>> print(add_integer(5, 6.7))
    11

    >>> print(add_integer(6.6, 8.2))
    14

    >>> print(add_integer(-4, 5.2))
    1

    >>> print(add_integer(6.2, -3.2))
    3

    >>> print(add_integer(-4.2, -10.5))
    -14

Incorrect Usage:

    >>> print(add_integer(4, "School"))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer("Holberton", "School"))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer("integer"))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer("ceci est un test", 18))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer("K2tog", 5))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(None))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(1, "r"))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer(12, "!"))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer())
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> print(add_integer(float('inf')))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(float('inf'), 1))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(float('nan'), 2))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> print(add_integer(5, None))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer(None, None))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer([10, 9], 3))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(int))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(int, 4))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(int = 42))
    Traceback (most recent call last):
    TypeError: add_integer() got an unexpected keyword argument 'int'

    >>> print(add_integer('#', 4))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(1, 2, 1))
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> print(add_integer(b = 12))
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
    